<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yeollu.getrend.store.dao.InstaLocationMapper">

<insert id="insertInstaLocation" parameterType="instaLocation">
insert into 
	insta_locations (
		location_no
		, location_pk
		, location_id
		, store_no
		, location_x
		, location_y
	) values(
		seq_insta_locations.nextval
		, #{location_pk}
		, #{location_id}
		, #{store_no}
		, #{location_x}
		, #{location_y}
	)
</insert>

<insert id="insertInstaLocationList" parameterType="list">
<foreach collection="list" item="item" index="index" separator=" " open="insert all" close="select * from dual">
	into insta_locations (
		location_no
		, location_pk
		, location_id
		, store_no
		, location_x
		, location_y
	) values (
		seq_insta_locations.nextval
		, #{item.location_pk}
		, #{item.location_id}
		, #{item.store_no}
		, #{item.location_x}
		, #{item.location_y}
	)
</foreach>
</insert>

<select id="countInstaLocations" resultType="int">
select
	count(*)
from
	insta_locations
</select>

<select id="isExistedInstaLocation" parameterType="string" resultType="string">
select
	decode(count(*), 0, 'false', 'true') as result
from
	insta_locations
where
	store_no = #{store_no}
</select>

<select id="selectInstaLocationByPk" parameterType="string" resultType="instaLocation">
select
	location_pk
	, location_id
	, store_no
	, location_x
	, location_y
	, location_indate
from
	insta_locations
where
	location_pk = #{location_pk}
</select>

</mapper>

