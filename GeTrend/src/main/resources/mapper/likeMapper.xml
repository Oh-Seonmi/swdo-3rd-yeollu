<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yeollu.getrend.store.dao.LikeMapper">

<insert id="likeInsert" parameterType="like">
<![CDATA[
insert into 
	likes (
		store_no
		, user_email
	) values(
		#{store_no}
		,#{user_email}
	)
]]>	
</insert>

<delete id="likeDelete">
<![CDATA[
delete from
	likes
where
	store_no = #{store_no}
and
	user_email = #{user_email}
]]>		
</delete>

<select id="likeSelectByEmail" parameterType="string" resultType="hashmap">
<![CDATA[
select
	s.store_no as store_no
	,s.store_name as store_name
	,s.store_cate1 as store_cate1
	,l.user_email as user_email
	,to_char(l.likes_indate,'yyyy-MM-dd') as likes_indate
from
	likes l, stores s
where
	l.store_no = s.store_no
and
	l.user_email = #{user_email}
order by
	l.likes_indate desc
]]>
</select>

<select id="likeSelectByEmailStoreno" parameterType="like" resultType="int">
<![CDATA[
select
	count(*)
from
	likes
where
	user_email = #{user_email}	
and
	store_no = #{store_no}
]]>	
</select>

<select id="likeStoreCountByEmail" parameterType="string" resultType="int">
<![CDATA[
select
	count(store_no)
from
	likes
where
	user_email = #{user_email}
]]>		
</select>

<select id="isExistedLike" parameterType="like" resultType="string">
<![CDATA[
select
	decode(count(*), 0, 'false', 'true') as result
from
	likes
where
	user_email = #{user_email}
	and store_no = #{store_no}
]]>		
</select>

</mapper>

